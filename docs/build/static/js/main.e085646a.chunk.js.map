{"version":3,"sources":["components/App.js","index.js"],"names":["App","useState","dataList","data","setData","clubName","setClubName","openWeek","setOpenWeek","openWeekend","setOpenWeekend","className","map","index","name","openOnWeekdays","openOnWeekend","action","htmlFor","type","value","onChange","ev","target","id","checked","onClick","preventDefault","newClub","ReactDOM","render","document","getElementById"],"mappings":"wNAqEeA,EAjEH,WACV,MAAwBC,mBAASC,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA+BH,mBAAS,IAAxC,mBAAOI,EAAP,KAAgBC,EAAhB,KACA,EAAgCL,oBAAS,GAAzC,mBAAOM,EAAP,KAAiBC,EAAjB,KACA,EAAsCP,oBAAS,GAA/C,mBAAOQ,EAAP,KAAoBC,EAApB,KAkCA,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,SAAlB,SACE,6CAEF,iCACE,oBAAIA,UAAU,aAAd,SAjBFR,EAAKS,KAAI,SAACT,EAAKU,GACb,OACE,qBAAIF,UAAU,mBAAd,UACE,wCAASE,EAAT,aAAmBV,EAAKW,QACxB,6DAAmD,IAAtBX,EAAKY,eAAuB,QAAK,QAC9D,iEAAsD,IAArBZ,EAAKa,cAAsB,QAAK,UAH7BH,QAkBxC,yDACA,uBAAMI,OAAO,GAAGN,UAAU,OAA1B,UACE,uBAAOO,QAAQ,WAAf,6BACA,uBAAOJ,KAAK,WAAWK,KAAK,OAAOC,MAAOf,EAAUgB,SA5CrC,SAACC,GACtBhB,EAAYgB,EAAGC,OAAOH,UA4ChB,wBAAOF,QAAQ,QAAf,UACE,uBAAOM,GAAG,GAAGL,KAAK,WAAWL,KAAK,QAAQO,SA3C7B,SAACC,GACtBd,EAAYc,EAAGC,OAAOE,YAyChB,4BAIA,wBAAOP,QAAQ,UAAf,UACE,uBAAOM,GAAG,GAAGL,KAAK,WAAWL,KAAK,UAAUO,SA5C5B,SAACC,GACzBZ,EAAeY,EAAGC,OAAOE,YA0CnB,mCAIA,wBAAQC,QA5CI,SAACJ,GACnBA,EAAGK,iBACH,IAAMC,EAAU,CACd,KAAQvB,EACR,eAAkBE,EAClB,cAAiBE,GAEnBL,EAAQ,GAAD,mBAAKD,GAAL,CAAWyB,MAqCZ,+CC3DVC,IAASC,OAAO,cAAC,EAAD,IAAQC,SAASC,eAAe,U","file":"static/js/main.e085646a.chunk.js","sourcesContent":["import { useState } from 'react';\nimport '../styles/App.scss';\nimport dataList from './data.json';\n\nconst App = () => {\n  const [data, setData] = useState(dataList);\n  const [clubName,setClubName] = useState('');\n  const [openWeek, setOpenWeek] = useState(false);\n  const [openWeekend, setOpenWeekend] = useState(false);\n\n  const handleClubName = (ev) =>{\n    setClubName(ev.target.value);\n  }\n  const handleOpenWeek = (ev) =>{\n    setOpenWeek(ev.target.checked);\n  }\n  const handleOpenWeekend = (ev) =>{\n    setOpenWeekend(ev.target.checked);\n  }\n  const handleClick = (ev) =>{\n    ev.preventDefault();\n    const newClub = { \n      \"name\": clubName,\n      \"openOnWeekdays\": openWeek,\n      \"openOnWeekend\": openWeekend,\n    }\n    setData([...data, newClub]);\n  }\n\n  const renderClubs = () => {\n    return(\n      data.map((data,index)=>{\n        return(\n          <li className=\"main__list--item\" key={index}>\n            <h2>{`#${index}: ${data.name}`}</h2>\n            <p>{`Abierto entre semana: ${data.openOnWeekdays===true ?'Sí':'No'}`}</p>\n            <p>{`Abierto el fin de semana: ${data.openOnWeekend===true ?'Sí':'No'}`}</p>\n          </li>\n        );\n      })\n    );\n  }\n  return (\n    <div className=\"App\">\n      <header className=\"header\">\n        <h1>Mis clubs</h1>\n      </header>\n      <main>\n        <ul className=\"main__list\">\n         {renderClubs()}\n        </ul>\n        <h3>Añadir un nuevo club</h3>\n        <form action=\"\" className=\"form\">\n          <label htmlFor=\"add-club\">Nombre del club</label>\n          <input name=\"add-club\" type=\"text\" value={clubName} onChange={handleClubName} />\n          <label htmlFor=\"daily\">\n            <input id=\"\" type=\"checkbox\" name=\"daily\" onChange={handleOpenWeek}/>\n            ¿Abre entre semana?\n          </label>\n          <label htmlFor=\"weekend\">\n            <input id=\"\" type=\"checkbox\" name=\"weekend\" onChange={handleOpenWeekend}/>\n            ¿Abre los fines de semana?\n          </label>\n          <button onClick= {handleClick}>Añadir un nuevo club</button>\n        </form>\n      </main>\n    </div>\n  );\n};\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(<App />,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\n"],"sourceRoot":""}